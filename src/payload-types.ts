/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'training-posts': TrainingPost;
    notifications: Notification;
    'notifications-list': NotificationsList;
    'meal-plan-notifications': MealPlanNotification;
    'text-extract-prompts': TextExtractPrompt;
    'meal-suggestions': MealSuggestion;
    ingredients: Ingredient;
    'phase-2-ingredients': Phase2Ingredient;
    'phase-3-ingredients': Phase3Ingredient;
    'metabolic-knowledge-base': MetabolicKnowledgeBase;
    'ai-prompts': AiPrompt;
    'openai-models': OpenaiModel;
    'openai-parameters': OpenaiParameter;
    'open-ai-token-usages': OpenAiTokenUsage;
    'chat-threads': ChatThread;
    'apple-pay-transactions': ApplePayTransaction;
    'apple-pay-cancel-subscription': ApplePayCancelSubscription;
    handcrafted: Handcrafted;
    comments: Comment;
    posts: Post;
    likes: Like;
    plans: Plan;
    'open-ai-vector-file': OpenAiVectorFile;
    userplanners: Userplanner;
    categories: Category;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'training-posts': TrainingPostsSelect<false> | TrainingPostsSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    'notifications-list': NotificationsListSelect<false> | NotificationsListSelect<true>;
    'meal-plan-notifications': MealPlanNotificationsSelect<false> | MealPlanNotificationsSelect<true>;
    'text-extract-prompts': TextExtractPromptsSelect<false> | TextExtractPromptsSelect<true>;
    'meal-suggestions': MealSuggestionsSelect<false> | MealSuggestionsSelect<true>;
    ingredients: IngredientsSelect<false> | IngredientsSelect<true>;
    'phase-2-ingredients': Phase2IngredientsSelect<false> | Phase2IngredientsSelect<true>;
    'phase-3-ingredients': Phase3IngredientsSelect<false> | Phase3IngredientsSelect<true>;
    'metabolic-knowledge-base': MetabolicKnowledgeBaseSelect<false> | MetabolicKnowledgeBaseSelect<true>;
    'ai-prompts': AiPromptsSelect<false> | AiPromptsSelect<true>;
    'openai-models': OpenaiModelsSelect<false> | OpenaiModelsSelect<true>;
    'openai-parameters': OpenaiParametersSelect<false> | OpenaiParametersSelect<true>;
    'open-ai-token-usages': OpenAiTokenUsagesSelect<false> | OpenAiTokenUsagesSelect<true>;
    'chat-threads': ChatThreadsSelect<false> | ChatThreadsSelect<true>;
    'apple-pay-transactions': ApplePayTransactionsSelect<false> | ApplePayTransactionsSelect<true>;
    'apple-pay-cancel-subscription': ApplePayCancelSubscriptionSelect<false> | ApplePayCancelSubscriptionSelect<true>;
    handcrafted: HandcraftedSelect<false> | HandcraftedSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    likes: LikesSelect<false> | LikesSelect<true>;
    plans: PlansSelect<false> | PlansSelect<true>;
    'open-ai-vector-file': OpenAiVectorFileSelect<false> | OpenAiVectorFileSelect<true>;
    userplanners: UserplannersSelect<false> | UserplannersSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'token-settings': TokenSetting;
  };
  globalsSelect: {
    'token-settings': TokenSettingsSelect<false> | TokenSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'user';
  firstName: string;
  lastName: string;
  practitionerName?: string | null;
  practitionerEmail?: string | null;
  currentActivePlan?: string | null;
  planStatus?: string | null;
  stripeCustomerID?: string | null;
  userAvatar?: (string | null) | Media;
  lastLogin: string;
  lastAppAccess: string;
  planExpiryDate?: string | null;
  DaysInARow: number;
  userFirebaseToken?: string | null;
  lastViewedCommunity?: string | null;
  AiRememberConversation?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-posts".
 */
export interface TrainingPost {
  id: string;
  title: string;
  summary: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage: string | Media;
  author: string | User;
  publishedDate: string;
  comments?:
    | {
        author: string | User;
        content: string;
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  likes?:
    | {
        user: string | User;
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  userId: string;
  mealTimeReminder?: string | null;
  message?: string | null;
  createdAt: string;
  weeklyMealPlanNotification?: boolean | null;
  trainingPostNotification?: boolean | null;
  communityPostNotification?: boolean | null;
  aiagentNotification?: boolean | null;
  breakfastReminder?: boolean | null;
  lunchReminder?: boolean | null;
  dinnerReminder?: boolean | null;
  breakfastTime?: string | null;
  breakDishName?: string | null;
  lunchTime?: string | null;
  lunchDishName?: string | null;
  dinnerTime?: string | null;
  dinnerDishName?: string | null;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications-list".
 */
export interface NotificationsList {
  id: string;
  userId: string;
  title: string;
  message: string;
  read: boolean;
  notificationType: 'breakfast' | 'lunch' | 'dinner' | 'weekly_plan' | 'achievement';
  displayTime?: string | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-plan-notifications".
 */
export interface MealPlanNotification {
  id: string;
  userId: string;
  planLastGenerated: string;
  mbPlan: string;
  selectedPlan: string;
  email: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "text-extract-prompts".
 */
export interface TextExtractPrompt {
  id: string;
  category: string;
  promptType: 'system' | 'user';
  content: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-suggestions".
 */
export interface MealSuggestion {
  id: string;
  name: string;
  user: string | User;
  isActive?: boolean | null;
  Breakfasts?:
    | {
        proteinIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        carbohydrateIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  Lunches?:
    | {
        proteinIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        carbohydrateIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  Dinners?:
    | {
        proteinIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        carbohydrateIngredients?:
          | {
              quantity?: string | null;
              measureType?: string | null;
              name: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ingredients".
 */
export interface Ingredient {
  id: string;
  name: string;
  category: 'protein' | 'vegetable' | 'fruit' | 'grain' | 'dairy' | 'spice' | 'oil' | 'other';
  /**
   * Check if this is a common cooking ingredient that can be used in any recipe
   */
  isCommon?: boolean | null;
  /**
   * Suggested substitute that aligns with Metabolic Balance guidelines
   */
  metabolicBalanceSubstitute?: string | null;
  /**
   * Brief description of the ingredient and its use in Metabolic Balance
   */
  description?: string | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phase-2-ingredients".
 */
export interface Phase2Ingredient {
  id: string;
  user: string | User;
  categories: {
    categoryName: string;
    items: {
      name: string;
      quantity?: string | null;
      unit?: string | null;
      exclude?: boolean | null;
      id?: string | null;
    }[];
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phase-3-ingredients".
 */
export interface Phase3Ingredient {
  id: string;
  user: string | User;
  categories: {
    categoryName: string;
    items: {
      name: string;
      quantity?: string | null;
      unit?: string | null;
      id?: string | null;
    }[];
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "metabolic-knowledge-base".
 */
export interface MetabolicKnowledgeBase {
  id: string;
  fileName: string;
  fileContent: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ai-prompts".
 */
export interface AiPrompt {
  id: string;
  name: string;
  promptType: 'system' | 'user';
  content: string;
  /**
   * A brief description of what this prompt is used for
   */
  description?: string | null;
  isActive?: boolean | null;
  /**
   * Order in which this prompt should be applied (lower numbers first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "openai-models".
 */
export interface OpenaiModel {
  id: string;
  /**
   * The OpenAI model identifier, e.g. "gpt-4o-mini"
   */
  modelName: string;
  /**
   * Mark this model as the active one used in the app
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "openai-parameters".
 */
export interface OpenaiParameter {
  id: string;
  /**
   * The temperature value (e.g., 0.7)
   */
  temperature: number;
  /**
   * The maximum number of output tokens (e.g., 1000)
   */
  maxTokens: number;
  /**
   * The top_p value (e.g., 1)
   */
  topP: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-ai-token-usages".
 */
export interface OpenAiTokenUsage {
  id: string;
  userId: string;
  userEmail: string;
  month: string;
  year: number;
  tokenUsed: number;
  monthlyTokenLimit: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-threads".
 */
export interface ChatThread {
  id: string;
  user: string | User;
  previousResponseId?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-transactions".
 */
export interface ApplePayTransaction {
  id: string;
  userId: string;
  productId?: string | null;
  transactionId?: string | null;
  planPeriod?: string | null;
  planExpiryDate?: string | null;
  transactionDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-cancel-subscription".
 */
export interface ApplePayCancelSubscription {
  id: string;
  userId: string;
  productId: string;
  cancelTime: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "handcrafted".
 */
export interface Handcrafted {
  id: string;
  userId: string;
  name: string;
  ingredients: {
    ingredient?: string | null;
    name: string;
    quantity: string;
    unit: string;
    id?: string | null;
  }[];
  method: {
    step: string;
    id?: string | null;
  }[];
  cookingTime: number;
  imagePrompt?: string | null;
  image?: (string | null) | Media;
  isFavourite?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: string;
  content: string;
  post: string | Post;
  user?: (string | User)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  content?: string | null;
  author: string | User;
  image?: (string | null) | Media;
  likesCount?: number | null;
  /**
   * Likes on this post
   */
  likes?: (string | Like)[] | null;
  commentsCount?: number | null;
  /**
   * Comments on this post
   */
  comments?: (string | Comment)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "likes".
 */
export interface Like {
  id: string;
  /**
   * The post that was liked
   */
  post: string | Post;
  /**
   * The user who liked the post
   */
  user: string | User;
  createdAt: string;
  /**
   * Whether the post is currently liked
   */
  isLiked: boolean;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plans".
 */
export interface Plan {
  id: string;
  productName: string;
  productId: string;
  price: string;
  currency: string;
  pricePerWeek: string;
  discountTag: string;
  priceId: string;
  planPeriod: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-ai-vector-file".
 */
export interface OpenAiVectorFile {
  id: string;
  fileName: string;
  fileId: string;
  vectorStoreId: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "userplanners".
 */
export interface Userplanner {
  id: string;
  user: string | User;
  name: string;
  planner:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  subcategories?:
    | {
        name: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'training-posts';
        value: string | TrainingPost;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'notifications-list';
        value: string | NotificationsList;
      } | null)
    | ({
        relationTo: 'meal-plan-notifications';
        value: string | MealPlanNotification;
      } | null)
    | ({
        relationTo: 'text-extract-prompts';
        value: string | TextExtractPrompt;
      } | null)
    | ({
        relationTo: 'meal-suggestions';
        value: string | MealSuggestion;
      } | null)
    | ({
        relationTo: 'ingredients';
        value: string | Ingredient;
      } | null)
    | ({
        relationTo: 'phase-2-ingredients';
        value: string | Phase2Ingredient;
      } | null)
    | ({
        relationTo: 'phase-3-ingredients';
        value: string | Phase3Ingredient;
      } | null)
    | ({
        relationTo: 'metabolic-knowledge-base';
        value: string | MetabolicKnowledgeBase;
      } | null)
    | ({
        relationTo: 'ai-prompts';
        value: string | AiPrompt;
      } | null)
    | ({
        relationTo: 'openai-models';
        value: string | OpenaiModel;
      } | null)
    | ({
        relationTo: 'openai-parameters';
        value: string | OpenaiParameter;
      } | null)
    | ({
        relationTo: 'open-ai-token-usages';
        value: string | OpenAiTokenUsage;
      } | null)
    | ({
        relationTo: 'chat-threads';
        value: string | ChatThread;
      } | null)
    | ({
        relationTo: 'apple-pay-transactions';
        value: string | ApplePayTransaction;
      } | null)
    | ({
        relationTo: 'apple-pay-cancel-subscription';
        value: string | ApplePayCancelSubscription;
      } | null)
    | ({
        relationTo: 'handcrafted';
        value: string | Handcrafted;
      } | null)
    | ({
        relationTo: 'comments';
        value: string | Comment;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'likes';
        value: string | Like;
      } | null)
    | ({
        relationTo: 'plans';
        value: string | Plan;
      } | null)
    | ({
        relationTo: 'open-ai-vector-file';
        value: string | OpenAiVectorFile;
      } | null)
    | ({
        relationTo: 'userplanners';
        value: string | Userplanner;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  firstName?: T;
  lastName?: T;
  practitionerName?: T;
  practitionerEmail?: T;
  currentActivePlan?: T;
  planStatus?: T;
  stripeCustomerID?: T;
  userAvatar?: T;
  lastLogin?: T;
  lastAppAccess?: T;
  planExpiryDate?: T;
  DaysInARow?: T;
  userFirebaseToken?: T;
  lastViewedCommunity?: T;
  AiRememberConversation?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-posts_select".
 */
export interface TrainingPostsSelect<T extends boolean = true> {
  title?: T;
  summary?: T;
  content?: T;
  featuredImage?: T;
  author?: T;
  publishedDate?: T;
  comments?:
    | T
    | {
        author?: T;
        content?: T;
        createdAt?: T;
        id?: T;
      };
  likes?:
    | T
    | {
        user?: T;
        createdAt?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  userId?: T;
  mealTimeReminder?: T;
  message?: T;
  createdAt?: T;
  weeklyMealPlanNotification?: T;
  trainingPostNotification?: T;
  communityPostNotification?: T;
  aiagentNotification?: T;
  breakfastReminder?: T;
  lunchReminder?: T;
  dinnerReminder?: T;
  breakfastTime?: T;
  breakDishName?: T;
  lunchTime?: T;
  lunchDishName?: T;
  dinnerTime?: T;
  dinnerDishName?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications-list_select".
 */
export interface NotificationsListSelect<T extends boolean = true> {
  userId?: T;
  title?: T;
  message?: T;
  read?: T;
  notificationType?: T;
  displayTime?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-plan-notifications_select".
 */
export interface MealPlanNotificationsSelect<T extends boolean = true> {
  userId?: T;
  planLastGenerated?: T;
  mbPlan?: T;
  selectedPlan?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "text-extract-prompts_select".
 */
export interface TextExtractPromptsSelect<T extends boolean = true> {
  category?: T;
  promptType?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-suggestions_select".
 */
export interface MealSuggestionsSelect<T extends boolean = true> {
  name?: T;
  user?: T;
  isActive?: T;
  Breakfasts?:
    | T
    | {
        proteinIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        carbohydrateIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        id?: T;
      };
  Lunches?:
    | T
    | {
        proteinIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        carbohydrateIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        id?: T;
      };
  Dinners?:
    | T
    | {
        proteinIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        carbohydrateIngredients?:
          | T
          | {
              quantity?: T;
              measureType?: T;
              name?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ingredients_select".
 */
export interface IngredientsSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  isCommon?: T;
  metabolicBalanceSubstitute?: T;
  description?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phase-2-ingredients_select".
 */
export interface Phase2IngredientsSelect<T extends boolean = true> {
  user?: T;
  categories?:
    | T
    | {
        categoryName?: T;
        items?:
          | T
          | {
              name?: T;
              quantity?: T;
              unit?: T;
              exclude?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phase-3-ingredients_select".
 */
export interface Phase3IngredientsSelect<T extends boolean = true> {
  user?: T;
  categories?:
    | T
    | {
        categoryName?: T;
        items?:
          | T
          | {
              name?: T;
              quantity?: T;
              unit?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "metabolic-knowledge-base_select".
 */
export interface MetabolicKnowledgeBaseSelect<T extends boolean = true> {
  fileName?: T;
  fileContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ai-prompts_select".
 */
export interface AiPromptsSelect<T extends boolean = true> {
  name?: T;
  promptType?: T;
  content?: T;
  description?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "openai-models_select".
 */
export interface OpenaiModelsSelect<T extends boolean = true> {
  modelName?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "openai-parameters_select".
 */
export interface OpenaiParametersSelect<T extends boolean = true> {
  temperature?: T;
  maxTokens?: T;
  topP?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-ai-token-usages_select".
 */
export interface OpenAiTokenUsagesSelect<T extends boolean = true> {
  userId?: T;
  userEmail?: T;
  month?: T;
  year?: T;
  tokenUsed?: T;
  monthlyTokenLimit?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-threads_select".
 */
export interface ChatThreadsSelect<T extends boolean = true> {
  user?: T;
  previousResponseId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-transactions_select".
 */
export interface ApplePayTransactionsSelect<T extends boolean = true> {
  userId?: T;
  productId?: T;
  transactionId?: T;
  planPeriod?: T;
  planExpiryDate?: T;
  transactionDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-cancel-subscription_select".
 */
export interface ApplePayCancelSubscriptionSelect<T extends boolean = true> {
  userId?: T;
  productId?: T;
  cancelTime?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "handcrafted_select".
 */
export interface HandcraftedSelect<T extends boolean = true> {
  userId?: T;
  name?: T;
  ingredients?:
    | T
    | {
        ingredient?: T;
        name?: T;
        quantity?: T;
        unit?: T;
        id?: T;
      };
  method?:
    | T
    | {
        step?: T;
        id?: T;
      };
  cookingTime?: T;
  imagePrompt?: T;
  image?: T;
  isFavourite?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  post?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  content?: T;
  author?: T;
  image?: T;
  likesCount?: T;
  likes?: T;
  commentsCount?: T;
  comments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "likes_select".
 */
export interface LikesSelect<T extends boolean = true> {
  post?: T;
  user?: T;
  createdAt?: T;
  isLiked?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plans_select".
 */
export interface PlansSelect<T extends boolean = true> {
  productName?: T;
  productId?: T;
  price?: T;
  currency?: T;
  pricePerWeek?: T;
  discountTag?: T;
  priceId?: T;
  planPeriod?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "open-ai-vector-file_select".
 */
export interface OpenAiVectorFileSelect<T extends boolean = true> {
  fileName?: T;
  fileId?: T;
  vectorStoreId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "userplanners_select".
 */
export interface UserplannersSelect<T extends boolean = true> {
  user?: T;
  name?: T;
  planner?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  subcategories?:
    | T
    | {
        name?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "token-settings".
 */
export interface TokenSetting {
  id: string;
  monthlyTokenLimit: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "token-settings_select".
 */
export interface TokenSettingsSelect<T extends boolean = true> {
  monthlyTokenLimit?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}