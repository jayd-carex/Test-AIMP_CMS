/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'training-posts': TrainingPost;
    notifications: Notification;
    'notifications-list': NotificationsList;
    'meal-plan-notifications': MealPlanNotification;
    'apple-pay-transactions': ApplePayTransaction;
    'apple-product': AppleProduct;
    'apple-pay-cancel-subscription': ApplePayCancelSubscription;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'training-posts': TrainingPostsSelect<false> | TrainingPostsSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    'notifications-list': NotificationsListSelect<false> | NotificationsListSelect<true>;
    'meal-plan-notifications': MealPlanNotificationsSelect<false> | MealPlanNotificationsSelect<true>;
    'apple-pay-transactions': ApplePayTransactionsSelect<false> | ApplePayTransactionsSelect<true>;
    'apple-product': AppleProductSelect<false> | AppleProductSelect<true>;
    'apple-pay-cancel-subscription': ApplePayCancelSubscriptionSelect<false> | ApplePayCancelSubscriptionSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  currentActivePlan?: string | null;
  planStatus?: string | null;
  userAvatar?: (string | null) | Media;
  lastLogin: string;
  lastAppAccess: string;
  planExpiryDate?: string | null;
  DaysInARow: number;
  userFirebaseToken?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-posts".
 */
export interface TrainingPost {
  id: string;
  title: string;
  summary: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage: string | Media;
  author: string | User;
  publishedDate: string;
  comments?:
    | {
        author: string | User;
        content: string;
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  likes?:
    | {
        user: string | User;
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  userId: string;
  mealTimeReminder?: string | null;
  message?: string | null;
  createdAt: string;
  weeklyMealPlanNotification?: boolean | null;
  breakfastReminder?: boolean | null;
  lunchReminder?: boolean | null;
  dinnerReminder?: boolean | null;
  breakfastTime?: string | null;
  breakDishName?: string | null;
  lunchTime?: string | null;
  lunchDishName?: string | null;
  dinnerTime?: string | null;
  dinnerDishName?: string | null;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications-list".
 */
export interface NotificationsList {
  id: string;
  userId: string;
  title: string;
  message: string;
  read: boolean;
  notificationType: 'breakfast' | 'lunch' | 'dinner' | 'weekly_plan' | 'achievement';
  displayTime?: string | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-plan-notifications".
 */
export interface MealPlanNotification {
  id: string;
  userId: string;
  planLastGenerated: string;
  mbPlan: string;
  selectedPlan: string;
  email: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-transactions".
 */
export interface ApplePayTransaction {
  id: string;
  userId: string;
  productId?: string | null;
  transactionId?: string | null;
  planPeriod?: string | null;
  planExpiryDate?: string | null;
  transactionDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-product".
 */
export interface AppleProduct {
  id: string;
  productId: string;
  referenceName: string;
  subscriptionDuration: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-cancel-subscription".
 */
export interface ApplePayCancelSubscription {
  id: string;
  userId: string;
  productId: string;
  cancelTime: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'training-posts';
        value: string | TrainingPost;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'notifications-list';
        value: string | NotificationsList;
      } | null)
    | ({
        relationTo: 'meal-plan-notifications';
        value: string | MealPlanNotification;
      } | null)
    | ({
        relationTo: 'apple-pay-transactions';
        value: string | ApplePayTransaction;
      } | null)
    | ({
        relationTo: 'apple-product';
        value: string | AppleProduct;
      } | null)
    | ({
        relationTo: 'apple-pay-cancel-subscription';
        value: string | ApplePayCancelSubscription;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  currentActivePlan?: T;
  planStatus?: T;
  userAvatar?: T;
  lastLogin?: T;
  lastAppAccess?: T;
  planExpiryDate?: T;
  DaysInARow?: T;
  userFirebaseToken?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-posts_select".
 */
export interface TrainingPostsSelect<T extends boolean = true> {
  title?: T;
  summary?: T;
  content?: T;
  featuredImage?: T;
  author?: T;
  publishedDate?: T;
  comments?:
    | T
    | {
        author?: T;
        content?: T;
        createdAt?: T;
        id?: T;
      };
  likes?:
    | T
    | {
        user?: T;
        createdAt?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  userId?: T;
  mealTimeReminder?: T;
  message?: T;
  createdAt?: T;
  weeklyMealPlanNotification?: T;
  breakfastReminder?: T;
  lunchReminder?: T;
  dinnerReminder?: T;
  breakfastTime?: T;
  breakDishName?: T;
  lunchTime?: T;
  lunchDishName?: T;
  dinnerTime?: T;
  dinnerDishName?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications-list_select".
 */
export interface NotificationsListSelect<T extends boolean = true> {
  userId?: T;
  title?: T;
  message?: T;
  read?: T;
  notificationType?: T;
  displayTime?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meal-plan-notifications_select".
 */
export interface MealPlanNotificationsSelect<T extends boolean = true> {
  userId?: T;
  planLastGenerated?: T;
  mbPlan?: T;
  selectedPlan?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-transactions_select".
 */
export interface ApplePayTransactionsSelect<T extends boolean = true> {
  userId?: T;
  productId?: T;
  transactionId?: T;
  planPeriod?: T;
  planExpiryDate?: T;
  transactionDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-product_select".
 */
export interface AppleProductSelect<T extends boolean = true> {
  productId?: T;
  referenceName?: T;
  subscriptionDuration?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apple-pay-cancel-subscription_select".
 */
export interface ApplePayCancelSubscriptionSelect<T extends boolean = true> {
  userId?: T;
  productId?: T;
  cancelTime?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}